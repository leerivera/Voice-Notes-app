{"ast":null,"code":"var _jsxFileName = \"/home/leer/VBOX/reactpoc/src/containers/NoteEditContainer.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport Layout from '../components/stateless/Layout';\nimport { updateNote, fetchNoteDetail } from '../redux/ducks/notes';\nimport NoteForm from '../components/stateful/NoteForm';\nexport const NoteEditContainer = ({\n  fetchNoteDetail,\n  match,\n  activeNote,\n  updateNote,\n  updated\n}) => {\n  useEffect(() => {\n    const noteId = match.params.id;\n    fetchNoteDetail(noteId);\n  }, []);\n  console.log('updated', updated);\n  if (updated) return /*#__PURE__*/React.createElement(Redirect, {\n    push: true,\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 23\n    }\n  });\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, activeNote && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-md py-4 px-8 bg-white shadow-lg rounded-lg my-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NoteForm, {\n    onSave: updateNote,\n    ctaLabel: \"Update\",\n    noteId: activeNote.id,\n    preTitle: activeNote.title,\n    preContent: activeNote.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst mapStateToProps = ({\n  notes\n}) => ({\n  activeNote: notes && notes.active,\n  updated: notes && notes.updated\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchNoteDetail: noteId => dispatch(fetchNoteDetail(noteId)),\n  updateNote: note => dispatch(updateNote(note))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteEditContainer);","map":{"version":3,"sources":["/home/leer/VBOX/reactpoc/src/containers/NoteEditContainer.js"],"names":["React","useEffect","connect","Redirect","Layout","updateNote","fetchNoteDetail","NoteForm","NoteEditContainer","match","activeNote","updated","noteId","params","id","console","log","title","content","mapStateToProps","notes","active","mapDispatchToProps","dispatch","note"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,sBAA5C;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAAEF,EAAAA,eAAF;AAAmBG,EAAAA,KAAnB;AAA0BC,EAAAA,UAA1B;AAAsCL,EAAAA,UAAtC;AAAkDM,EAAAA;AAAlD,CAAD,KAAiE;AAChGV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,MAAM,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA5B;AACAR,IAAAA,eAAe,CAACM,MAAD,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,OAAvB;AACA,MAAIA,OAAJ,EAAa,oBAAO,oBAAC,QAAD;AAAU,IAAA,IAAI,MAAd;AAAe,IAAA,EAAE,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,iBACT;AAAK,IAAA,SAAS,EAAC,wDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEL,UAAlB;AAA8B,IAAA,QAAQ,EAAC,QAAvC;AAAgD,IAAA,MAAM,EAAEK,UAAU,CAACI,EAAnE;AAAuE,IAAA,QAAQ,EAAEJ,UAAU,CAACO,KAA5F;AAAmG,IAAA,UAAU,EAAEP,UAAU,CAACQ,OAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF;AASD,CAhBM;;AAkBP,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAgB;AACtCV,EAAAA,UAAU,EAAEU,KAAK,IAAIA,KAAK,CAACC,MADW;AAEtCV,EAAAA,OAAO,EAAES,KAAK,IAAIA,KAAK,CAACT;AAFc,CAAhB,CAAxB;;AAKA,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;AACxCjB,EAAAA,eAAe,EAAGM,MAAD,IAAYW,QAAQ,CAACjB,eAAe,CAACM,MAAD,CAAhB,CADG;AAExCP,EAAAA,UAAU,EAAGmB,IAAD,IAAUD,QAAQ,CAAClB,UAAU,CAACmB,IAAD,CAAX;AAFU,CAAf,CAA3B;;AAKA,eAAetB,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,iBAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router'\n\nimport Layout from '../components/stateless/Layout'\nimport { updateNote, fetchNoteDetail } from '../redux/ducks/notes'\nimport NoteForm from '../components/stateful/NoteForm'\n\nexport const NoteEditContainer = ({ fetchNoteDetail, match, activeNote, updateNote, updated }) => {\n  useEffect(() => {\n    const noteId = match.params.id\n    fetchNoteDetail(noteId)\n  }, [])\n  console.log('updated', updated)\n  if (updated) return <Redirect push to=\"/\" />\n  return (\n    <Layout>\n      {activeNote && (\n        <div className=\"max-w-md py-4 px-8 bg-white shadow-lg rounded-lg my-20\">\n          <NoteForm onSave={updateNote} ctaLabel=\"Update\" noteId={activeNote.id} preTitle={activeNote.title} preContent={activeNote.content} />\n        </div>\n      )}\n    </Layout>\n  )\n}\n\nconst mapStateToProps = ({ notes }) => ({\n  activeNote: notes && notes.active,\n  updated: notes && notes.updated\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchNoteDetail: (noteId) => dispatch(fetchNoteDetail(noteId)),\n  updateNote: (note) => dispatch(updateNote(note))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteEditContainer)\n"]},"metadata":{},"sourceType":"module"}